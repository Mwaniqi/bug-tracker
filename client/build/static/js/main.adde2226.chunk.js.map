{"version":3,"sources":["components/UserContex.js","components/Nav.js","components/BugContext.js","components/Bugs.js","shared/formValidation.js","components/AddBug.js","components/Home.js","components/Register.js","components/Login.js","App.js","serviceWorker.js","index.js"],"names":["UserContext","createContext","UserProvider","props","useState","user","setUser","Provider","value","children","withRouter","useContext","token","JSON","parse","sessionStorage","getItem","handleLogout","a","fetch","process","headers","status","removeItem","history","push","Menu","size","inverted","secondary","Item","as","className","to","floated","name","onClick","Button","compact","BugContext","BugProvider","bugs","setBugs","loading","setLoading","useEffect","getBugs","response","json","data","message","Bugs","handleDel","e","persist","id","target","closest","method","res","console","log","filter","bug","_id","Grid","Column","width","Transition","Group","List","divided","relaxed","animation","duration","Loader","inline","length","Header","textAlign","map","key","Content","indexOf","summary","description","basic","color","content","negative","Popup","on","trigger","position","useFormValidation","initialState","values","setValues","errors","setErrors","React","submitting","validate","field","Object","keys","handleChange","handleBlur","validationErrors","AddBug","setMessage","INITIAL_STATE","handleSubmit","preventDefault","body","stringify","prevBugs","centered","Message","visible","error","Form","onSubmit","Field","label","placeholder","control","Input","onChange","onBlur","TextArea","rows","disabled","Home","padded","stackable","Row","username","password","confirmPassword","handleRegister","errmsg","setItem","err","block","type","fluid","Divider","handleLogin","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.adde2226.chunk.js","sourcesContent":["import React, { useState, createContext } from 'react'\r\n\r\nexport const UserContext = createContext()\r\n\r\nexport const UserProvider = (props) => {\r\n  const [user, setUser] = useState(null)\r\n  // const [token, setToken] = useState(null)\r\n\r\n  return (\r\n    <UserContext.Provider value={[user, setUser]} >\r\n      {props.children}\r\n    </UserContext.Provider>\r\n  )\r\n}","import React, { useContext } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { Button, Menu } from 'semantic-ui-react'\r\nimport { UserContext } from './UserContex'\r\n\r\n\r\nfunction Nav(props) {\r\n  const [user, setUser] = useContext(UserContext)\r\n  const token = JSON.parse(sessionStorage.getItem('token'))\r\n\r\n  const handleLogout = async () => {\r\n    const response = await fetch(process.env.REACT_APP_APIURL+'/users/logout', {\r\n      headers: {'Authorization': token}\r\n    })\r\n\r\n    // const res = await response.json()\r\n    if (response.status === 200) {\r\n      sessionStorage.removeItem('token')\r\n      setUser(null)\r\n      props.history.push('/')\r\n    }\r\n  }\r\n\r\n  return( \r\n    <nav>\r\n      <Menu size='small' inverted secondary>\r\n        <Menu.Item as='h3' className='brand'><Link to='/'>Bug Tracker</Link></Menu.Item>\r\n        <Menu floated='right' inverted secondary>\r\n        {user ? \r\n          <><Menu.Item>welcome {user}</Menu.Item>\r\n            <Menu.Item\r\n              name='logout'\r\n              onClick={handleLogout}/>\r\n          </>      \r\n        :\r\n          <Menu.Item>\r\n            <Link to='/register'>\r\n              <Button inverted compact size='small'>Register</Button>\r\n            </Link>                      \r\n            <Link to='/login'>\r\n              <Button inverted compact size='small'>login</Button>\r\n            </Link> \r\n          </Menu.Item>}\r\n        </Menu>\r\n      </Menu>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default withRouter(Nav)","import React, { useState, useEffect, createContext } from 'react'\r\n// create context and pass state to components\r\nexport const BugContext = createContext()\r\n\r\nexport const BugProvider = (props) => {\r\n  const [bugs, setBugs] = useState([])\r\n  const [loading, setLoading] = useState(null)\r\n\r\n  // initial bugs fetch\r\n  useEffect(() => {\r\n    getBugs()\r\n    setLoading(true)\r\n  }, [])\r\n\r\n  const getBugs = async () => {\r\n    const response = await fetch(process.env.REACT_APP_APIURL)\r\n    const data = await response.json()\r\n    if(response.status !== 200) throw (data.message)\r\n    // update state\r\n    setBugs(data)\r\n    setLoading(null)\r\n  }\r\n\r\n  return (\r\n    // pass the state to every contained component\r\n    <BugContext.Provider value={[bugs, setBugs, loading]}>\r\n      {props.children}\r\n    </BugContext.Provider>\r\n  )\r\n}","import React, {useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { BugContext } from './BugContext'\r\nimport { UserContext } from './UserContex'\r\nimport { List, Button, Grid, Transition, Popup, Loader, Header } from 'semantic-ui-react'\r\n\r\nfunction Bugs() {\r\n  const [user, ] = useContext(UserContext)\r\n  // consume bugs array state\r\n  const [bugs, setBugs, loading] = useContext(BugContext)\r\n\r\n  const handleDel = async (e) => {\r\n    e.persist()\r\n    const token = JSON.parse(sessionStorage.getItem('token'))\r\n    const id = e.target.closest('.item').id\r\n    const response = await fetch(process.env.REACT_APP_APIURL+'/delete/'+id, {\r\n      method: \"delete\",\r\n      headers: { \"Content-Type\": \"application/json\", 'Authorization': token}\r\n    })\r\n    const res = await response.json()\r\n    if (response.status === 403) {\r\n      console.log(res)\r\n    } \r\n    if (response.status === 200) {\r\n      setBugs(bugs.filter(bug => bug._id !== id))\r\n    }\r\n    console.log(res)\r\n  }\r\n\r\n\r\n  return (\r\n    <Grid.Column as='section' width={9}>\r\n      <Transition.Group as={List} className='pad b-shadow' divided relaxed  animation='fade down' duration={300}>\r\n        {loading ? <Loader inline='centered' size='small' /> :\r\n          bugs.length < 1 ? <Header as='h3' textAlign='center'>No bugs</Header>\r\n         : bugs.map(bug => {\r\n          return (\r\n            <List.Item as='article' key={bug._id} id={bug._id}>\r\n              <List.Content as='small'><strong>id: {bugs.indexOf(bug)+1}</strong></List.Content>\r\n              <List.Content as='p'><strong>{bug.summary}</strong></List.Content>\r\n              <List.Content as='p'>{bug.description}</List.Content>\r\n              <List.Content floated='right'>\r\n              {!user ? <>\r\n                <Popup\r\n                   size='tiny' on='click'\r\n                  trigger={<Button basic compact className='mini' color='teal' content='Close' />} \r\n                  content={<Link to='/login'>login</Link>}\r\n                  position='bottom center' />\r\n                <Popup\r\n                   size='tiny' on='click'\r\n                  trigger={<Button basic compact className='mini' negative color='red' content='Del' />} \r\n                  content={<Link to='/login'>login</Link>}\r\n                  position='bottom center' />\r\n                </> :\r\n                <><Button basic compact className='mini' color='teal' content='Close' />\r\n                  <Button basic compact className='mini' negative content='Del' onClick={handleDel}/></>}\r\n              </List.Content>\r\n            </List.Item>\r\n          )\r\n        })}\r\n      </Transition.Group>\r\n    </Grid.Column>     \r\n  )\r\n}\r\n\r\nexport default Bugs","import React, { useState } from 'react'\r\n\r\nexport function useFormValidation(initialState) { \r\n  // custom state hooks\r\n  const [values, setValues] = useState(initialState)\r\n  const [errors, setErrors] = useState({})\r\n  // eslint-disable-next-line\r\n  const [submitting, setSubmitting] = React.useState(false)\r\n\r\n  // check for errors upon change in errors state\r\n  // React.useEffect(() => {\r\n  //   if(submitting) {\r\n  //     const noErrors = Object.keys(errors).length === 0\r\n  //     if (noErrors) {\r\n  //       console.log('no errors')\r\n  //       setSubmitting(false)\r\n  //     } else {\r\n  //       console.log('errors in validation')\r\n  //       setSubmitting(false)        \r\n  //     }\r\n  //   }\r\n  // }, [errors])\r\n  const validate = (values) => {\r\n    let field = Object.keys(values)\r\n\r\n    for(field in values) {\r\n      if(!values[field]) {\r\n        console.log(`${field} required`)\r\n        errors[field] = `${field} required`\r\n      }\r\n    }\r\n    return errors\r\n  }\r\n\r\n  const handleBlur = () => {\r\n    const validationErrors = validate(values);\r\n    setErrors(validationErrors);\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    if (errors[e.target.name]) delete errors[e.target.name]\r\n\r\n    setValues({...values, [e.target.name]: e.target.value})\r\n  }\r\n  return {values, setValues, submitting, handleChange, handleBlur, errors, setErrors, validate}\r\n}","import React, { useState, useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {BugContext} from '../components/BugContext'\r\nimport { useFormValidation } from '../shared/formValidation'\r\nimport { UserContext } from './UserContex'\r\nimport { Grid, Form, Button, TextArea, Input, Message } from 'semantic-ui-react'\r\n\r\nfunction AddBug() {\r\n  const [user] = useContext(UserContext)\r\n  // consume bugs array state from Context\r\n  // eslint-disable-next-line \r\n  const [bugs, setBugs] = useContext(BugContext)\r\n  const [message, setMessage] = useState(null)\r\n  const INITIAL_STATE = {summary: '', description: ''}\r\n  const { handleChange, handleBlur, values, setValues, errors, setErrors, submitting, validate } = useFormValidation(INITIAL_STATE)\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n\r\n    const validationErrors = validate(values)\r\n    setErrors(validationErrors)\r\n    // setSubmitting(true)\r\n\r\n    const token = JSON.parse(sessionStorage.getItem('token'))\r\n\r\n    // post data to db\r\n    const response = await fetch(process.env.REACT_APP_APIURL+'/new', {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\", 'Authorization': token},\r\n      body: JSON.stringify(values)\r\n    })\r\n    const data = await response.json()\r\n    // update bugs array with db data, triggers bugs list rerender\r\n    if(response.status === 200) {\r\n      setMessage(null)\r\n      setBugs(prevBugs => [...prevBugs, data])\r\n      // clear inputs by resetting bug state\r\n      setValues(INITIAL_STATE)\r\n    } \r\n    if(response.status === 422) setMessage('Check required fields')\r\n  }\r\n\r\n  return (\r\n    <Grid.Column as='section' centered='true' width={7}>\r\n    <div className='b-shadow pad'>\r\n      {user ? \r\n      <>\r\n        <h3>Add a bug</h3>\r\n        {message && <Message visible error relaxed='true' content={message} />}\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Field \r\n            value={values.summary || ''} label='Summary'\r\n            placeholder='Issue summary' name='summary'\r\n            control={Input} onChange={handleChange} onBlur={handleBlur}\r\n            className={ errors.summary && 'error'} />\r\n          <Form.TextArea \r\n            value={values.description || ''} label='Description'\r\n            placeholder='Issue description...' name='description'\r\n            control={TextArea} rows='6' onChange={handleChange} onBlur={handleBlur}\r\n            className={ errors.description && 'error'} />\r\n          <Button disabled={submitting} compact color='blue' content='Add' />\r\n        </Form>\r\n      </> : <p><Link to=\"/login\"><Button compact className='small' color='blue' content='New bug' /></Link></p>}\r\n    </div>\r\n    </Grid.Column>    \r\n  )\r\n}\r\n\r\nexport default AddBug","import React  from 'react'\r\nimport { Grid } from 'semantic-ui-react'\r\nimport Bugs from './Bugs'\r\nimport AddBug from './AddBug'\r\nimport { BugProvider } from './BugContext'\r\n\r\n\r\nfunction Home() {\r\n  return(\r\n    <Grid padded stackable centered>\r\n      <Grid.Row>\r\n        <BugProvider>\r\n          <AddBug />\r\n          <Bugs />\r\n        </BugProvider>\r\n      </Grid.Row>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Home","import React, { useState, useContext } from 'react'\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport { Grid, Form, Button, Input, Message, Header, Divider } from 'semantic-ui-react'\r\nimport { useFormValidation } from '../shared/formValidation'\r\nimport { UserContext } from './UserContex'\r\n\r\nfunction Register(props) {\r\n  const INITIAL_STATE = {username: '', password: '', confirmPassword: ''}\r\n  const { handleChange, handleBlur, values, setValues, validate, errors, setErrors } = useFormValidation(INITIAL_STATE)\r\n  const [message, setMessage] = useState({})\r\n  // eslint-disable-next-line \r\n  const [ user, setUser ] = useContext(UserContext)\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault()\r\n    const validationErrors = validate(values)\r\n    setErrors(validationErrors)\r\n\r\n    // post user data to db\r\n    const response = await fetch(process.env.REACT_APP_APIURL+'/users/register', {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(values)\r\n    })\r\n\r\n    const res = await response.json()\r\n    try {\r\n      if(response.status === 500) {\r\n        // eslint-disable-next-line\r\n        setMessage({['err']: res.errmsg})\r\n      } else if(response.status !== 200) {\r\n        setMessage('fail')\r\n      } else {\r\n        console.log(res)\r\n        setUser(res.username)\r\n        sessionStorage.setItem('token', JSON.stringify(res.token))\r\n        setValues(INITIAL_STATE)\r\n        setMessage({})\r\n        props.history.push('/')\r\n      }      \r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n  \r\n  return( \r\n  <Grid padded centered>\r\n    <Grid.Column as='section' className='form-width'>\r\n    <div className='b-shadow pad'>\r\n      {message==='fail' && <Message visible error content='Registration failed!'/>}\r\n      {message.err && <Message visible error content={message.err} />}\r\n      <Header as='h3' textAlign='center' block>Register</Header>\r\n      <Form onSubmit={handleRegister}>\r\n        <Form.Field \r\n          value={values.username || ''} label='Username'\r\n          placeholder='username' name='username'\r\n          control={Input} onChange={handleChange} onBlur={handleBlur}\r\n          className={ errors.username && 'error'} />\r\n        <Form.Field \r\n          value={values.password || ''} label='Password'\r\n          placeholder='password...' name='password' type='password'\r\n          control={Input} onChange={handleChange} onBlur={handleBlur}\r\n          className={ errors.password && 'error'} />\r\n        <Form.Field \r\n          value={values.confirmPassword || ''} label='Confirm password'\r\n          placeholder='confirm password...' name='confirmPassword'\r\n          type='password' control={Input} onChange={handleChange} onBlur={handleBlur}\r\n          className={ errors.confirmPassword && 'error'} />\r\n        <Button fluid color='blue' content='register' />\r\n      </Form>\r\n      <Divider></Divider>\r\n      <p>Already registered? <Link to=\"/login\">login</Link></p>    \r\n    </div>\r\n    </Grid.Column>      \r\n  </Grid> \r\n  )\r\n}\r\n\r\nexport default withRouter(Register)","import React, { useState, useContext }  from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { Grid, Form, Button, Input, Header, Divider, Message } from 'semantic-ui-react'\r\nimport { useFormValidation } from '../shared/formValidation'\r\nimport { UserContext } from './UserContex'\r\n\r\nfunction Login(props) {\r\n  // eslint-disable-next-line \r\n  const [ user, setUser] = useContext(UserContext)\r\n  const INITIAL_STATE = {username: '', password: ''}\r\n  const { handleChange, handleBlur, values, setValues, validate, errors, setErrors } = useFormValidation(INITIAL_STATE)\r\n  const [message, setMessage] = useState({})\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault()\r\n    const validationErrors = validate(values)\r\n    setErrors(validationErrors)\r\n\r\n    // post user data to db\r\n    const response = await fetch(process.env.REACT_APP_APIURL+'/users/login', {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(values)\r\n    })\r\n\r\n    const res = await response.json()\r\n    try {\r\n      if(response.status === 404 || response.status === 401) {\r\n        // eslint-disable-next-line\r\n        setMessage({['err']: res.errmsg})\r\n      } else if(response.status !== 200) {\r\n        setMessage('fail')\r\n      } else {\r\n        setUser(res.username)\r\n        sessionStorage.setItem('token', JSON.stringify(res.token))\r\n        setValues(INITIAL_STATE)\r\n        setMessage({})\r\n        props.history.push('/')\r\n      }      \r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n  \r\n  return(\r\n  <Grid padded centered>\r\n    <Grid.Column as='section' className='form-width'>\r\n    <div className='b-shadow pad'>\r\n      {message==='fail' && <Message visible error content='Login failed!'/>}\r\n      {message.err && <Message visible error content={message.err} />}\r\n      <Header as='h3' textAlign='center' block>Login</Header>\r\n      <Form onSubmit={handleLogin}>\r\n        <Form.Field \r\n          value={values.username || ''} label='Username'\r\n          placeholder='username' name='username'\r\n          control={Input} onChange={handleChange} onBlur={handleBlur}\r\n          className={ errors.username && 'error'} />\r\n        <Form.Field \r\n          value={values.password || ''} label='Password'\r\n          placeholder='password...' name='password' type='password'\r\n          control={Input} onChange={handleChange} onBlur={handleBlur}\r\n          className={ errors.password && 'error'} />\r\n        <Button fluid color='blue' content='login' />\r\n      </Form>\r\n      <Divider></Divider>\r\n      <p>Not registered? <Link to=\"/register\">register</Link></p>\r\n    </div>\r\n    </Grid.Column>      \r\n  </Grid> \r\n  )\r\n}\r\n\r\nexport default withRouter(Login)","import React from 'react';\nimport './App.css'\nimport Nav from './components/Nav'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Home from './components/Home';\nimport Register from './components/Register'\nimport Login from './components/Login'\nimport { UserProvider } from './components/UserContex'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <UserProvider>\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Nav />\n      </header>\n      <main className='main-container'>\n        <Switch>\n          <Route exact path='/'>\n            <Home />\n          </Route>\n          <Route path='/register'>\n            <Register />\n          </Route>\n          <Route path='/login'>\n            <Login />\n          </Route>\n          <Route path='*' component={() => '404 Not Found'} />\n        </Switch>\n      </main>\n    </div>\n    </UserProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}